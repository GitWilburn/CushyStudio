@top File { expression+ }

expression[@isGroup=Expression] {
  WeightedExpression |
  Permutations |

  Lora |
  Wildcard |
  Embedding |
  Tag |

  Separator |
  Break |

  Comment |
  Identifier |
  String
}

@skip { space }


WeightedExpression { "(" expression+ ")*" Number }

Permutations { "{" expression+ "}" }

Tag { "%" TagName }
TagName {  Identifier | String }

// LORA
// Lora { @specialize<Identifier, "lora"> ":" LoraName  }
Lora { "@" LoraName ( "[" Number ("," Number)? "]" )?   }
// ðŸ”´ TODO1: make those lowercase, so they don't appear in the final output
// DOC asays: You'll notice that the example has some terms starting with lowercase letter, and some that are capitalized. This difference is significant. Capitalized rules will show up as nodes in the syntax tree produced by the parser, lower-case rules will not.
LoraName { Identifier | String  }

// WILDCARD
Wildcard { "?" WildcardName }
WildcardName { Identifier | String  }

// EMBEDDING
Embedding { ":" EmbeddingName }
EmbeddingName { Identifier | String  }


@tokens {
  space { @whitespace+ }
  Break { "break" }
  Identifier { ($[A-Za-z0-9._\\\/\-] )+ }
  String { '"' !["]* '"' }
  Separator { "," }
  Comment { ";" ![\n]* }
  Number { "-"? $[0-9.]+ }
  // WeightedExpression {"{}"}
  @precedence { Comment, Break, Identifier }
  // @precedence { Comment, Break, Identifier, Number } // ðŸ”´
  // ðŸ”´ TODO: report issue about Number beeing injected as top-level
  // expression for no reason, if precence is defined
}
